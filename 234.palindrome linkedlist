/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {

        if(head == null) return true;
        ListNode fast=head;
        ListNode slow = head;
        while(fast !=null && fast.next != null) {
            fast = fast.next.next;
            slow = slow.next;
        }

        ListNode temp = reverse(slow);

        while(temp != null) {
            if(temp.val != head.val) {
                return false;
            }
            else {
                temp = temp.next;
                head = head.next;
            }
        }
        return true;
    }
    ListNode reverse(ListNode node) {
        ListNode output = null;

        while(node != null) {
            ListNode temp = node.next;
            node.next = output;
            output = node;
            node = temp;
        }
        return output;
    }
}
